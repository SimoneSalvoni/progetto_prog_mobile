// Generated by view binder compiler. Do not edit!
package com.example.italian_englishgames.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.italian_englishgames.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentImpLoseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final Button goHomeButton;

  @NonNull
  public final Button retryButton;

  @NonNull
  public final TextView solution;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView4;

  private FragmentImpLoseBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull Button goHomeButton,
      @NonNull Button retryButton, @NonNull TextView solution, @NonNull TextView textView2,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.goHomeButton = goHomeButton;
    this.retryButton = retryButton;
    this.solution = solution;
    this.textView2 = textView2;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentImpLoseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentImpLoseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_imp_lose, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentImpLoseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.goHomeButton;
      Button goHomeButton = rootView.findViewById(id);
      if (goHomeButton == null) {
        break missingId;
      }

      id = R.id.retryButton;
      Button retryButton = rootView.findViewById(id);
      if (retryButton == null) {
        break missingId;
      }

      id = R.id.solution;
      TextView solution = rootView.findViewById(id);
      if (solution == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentImpLoseBinding((ConstraintLayout) rootView, constraintLayout, goHomeButton,
          retryButton, solution, textView2, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
